name: Java CI/CD Pipeline (Auto-detect pom.xml)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Find folder containing pom.xml
      - name: Locate pom.xml
        id: findpom
        run: |
          pom_path=$(find . -name "pom.xml" | head -n 1)
          echo "POM_PATH=$pom_path" >> $GITHUB_ENV
          echo "Found pom.xml at: $pom_path"

      # Step 3: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 4: Build with Maven
      - name: Build with Maven
        run: mvn -B package
        working-directory: ${{ env.POM_PATH_DIR }}
        env:
          POM_PATH_DIR: ${{ env.POM_PATH }} && dirname ${{ env.POM_PATH }}

      # Step 5: Run tests
      - name: Run tests
        run: mvn test
        working-directory: ${{ env.POM_PATH_DIR }}
        env:
          POM_PATH_DIR: ${{ env.POM_PATH }} && dirname ${{ env.POM_PATH }}

      # Step 6: Upload build artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: ${{ env.POM_PATH_DIR }}/target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 1: Deploy to server via SSH
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /var/www/myapp
            git pull origin main
            systemctl restart tomcat
